name: Deploy Databricks Asset Bundle

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'databricks.yml'
      - 'resources/**'
      - 'notebooks/**'
      - '.github/workflows/deploy-databricks-bundle.yaml'
  pull_request:
    branches: [ main ]
    paths:
      - 'databricks.yml'
      - 'resources/**'
      - 'notebooks/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

permissions:
  id-token: write
  contents: read

env:
  # Azure authentication for Databricks
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}

jobs:
  validate:
    name: 🔍 Validate Bundle
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main
        
      - name: Configure Databricks Authentication
        run: |
          echo "🔐 Configuring Databricks authentication as service principal..."
          
          # Set Databricks authentication environment variables
          echo "DATABRICKS_HOST=${{ env.DATABRICKS_HOST }}" >> $GITHUB_ENV
          echo "DATABRICKS_AUTH_TYPE=azure-cli" >> $GITHUB_ENV
          
          # Set ARM environment variables for Azure authentication
          echo "ARM_CLIENT_ID=${{ env.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ env.ARM_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ env.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          
          # Extract hostname for bundle variables (remove https://)
          DATABRICKS_HOSTNAME=$(echo "${{ env.DATABRICKS_HOST }}" | sed 's|https://||')
          echo "DATABRICKS_HOSTNAME=${DATABRICKS_HOSTNAME}" >> $GITHUB_ENV
          
          # Test authentication by checking current user (should show service principal)
          echo "🧪 Testing Databricks authentication..."
          # databricks current-user me
          
          echo "✅ Databricks CLI configured with Azure CLI authentication"
          
      - name: Validate Bundle Configuration
        run: |
          echo "🔍 Validating Databricks Asset Bundle configuration..."
          databricks bundle validate --target dev \
            --var="databricks_host=${{ env.DATABRICKS_HOSTNAME }}" \
            --var="service_principal_id=${{ env.ARM_CLIENT_ID }}"

  deploy:
    name: 🚀 Deploy to Environment
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
    environment: 
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
      url: ${{ env.DATABRICKS_HOST }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Azure Login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main      
      - name: Configure Databricks Authentication
        run: |
          echo "🔐 Configuring Databricks authentication as service principal..."
          
          # Set Databricks authentication environment variables
          echo "DATABRICKS_HOST=${{ env.DATABRICKS_HOST }}" >> $GITHUB_ENV
          echo "DATABRICKS_AUTH_TYPE=azure-cli" >> $GITHUB_ENV
          
          # Set ARM environment variables for Azure authentication
          echo "ARM_CLIENT_ID=${{ env.ARM_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ env.ARM_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ env.ARM_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          
          # Extract hostname for bundle variables (remove https://)
          DATABRICKS_HOSTNAME=$(echo "${{ env.DATABRICKS_HOST }}" | sed 's|https://||')
          echo "DATABRICKS_HOSTNAME=${DATABRICKS_HOSTNAME}" >> $GITHUB_ENV
          
          # Test authentication by checking current user (should show service principal)
          echo "🧪 Testing Databricks authentication..."
          databricks current-user me
          
          echo "✅ Databricks CLI configured with Azure CLI authentication"

      - name: Determine Target Environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TARGET_ENV=prod" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "TARGET_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          else
            echo "TARGET_ENV=dev" >> $GITHUB_ENV
          fi
          echo "📍 Target environment: $TARGET_ENV"
      
      - name: Deploy Asset Bundle
        run: |
          echo "🚀 Deploying Databricks Asset Bundle to ${{ env.TARGET_ENV }} environment..."
          databricks bundle deploy --target ${{ env.TARGET_ENV }}

      - name: Validate Deployment
        run: |
          echo "🧪 Running post-deployment validation..."
          
          # List deployed resources
          echo "📊 Deployed resources:"
          databricks bundle summary --target ${{ env.TARGET_ENV }}

      - name: Create Deployment Summary
        if: success()
        run: |
          echo "📋 Creating deployment summary..."
          echo "# 🚀 Databricks Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Deployment Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ env.TARGET_ENV }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Authentication**: Azure Entra ID (OIDC)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment time**: $(date -u)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔐 Security Features" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Azure Entra ID (OIDC) authentication" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ No long-lived tokens stored" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Federated identity credentials" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Environment-specific deployments" >> $GITHUB_STEP_SUMMARY
